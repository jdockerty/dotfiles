
# Simple language server (for non-coding syntax completions)

# https://github.com/estin/simple-completion-language-server
[language-server.scls]
command = "simple-completion-language-server"

[language-server.scls.config]
max_completion_items = 100           # set max completion results len for each group: words, snippets, unicode-input
feature_words = true                 # enable completion by word
feature_snippets = true              # enable snippets
snippets_first = true                # completions will return before snippets by default
snippets_inline_by_word_tail = false # suggest snippets by WORD tail, for example text `xsq|` become `x^2|` when snippet `sq` has body `^2`
feature_unicode_input = false        # enable "unicode input"
feature_paths = false                # enable path completion
feature_citations = false            # enable citation completion (only on `citation` feature enabled)

# Rust

[[language]]
name = "rust"
language-servers = [ "rust-analyzer", "scls" ]

# Go

[[language]]
name = "go"
language-servers = [ "gopls", "scls" ]

# Stub for regular word auto-complete
#
# Use `:set-language stub` to ensure that this server starts on any doc.
[[language]]
name = "stub"
scope = "text.stub"
file-types = []
shebangs = []
roots = []
auto-format = false
language-servers = [ "scls" ]

# Java

[[language]]
name = "java"
scope = "source.java"
injection-regex = "java"
file-types = ["java"]
roots = ["pom.xml", "build.gradle", ]
indent = { tab-width = 4, unit = "    " }
language-servers = [ "jdtls" ]

[language-server]
jdtls = { command = "jdtls" }
